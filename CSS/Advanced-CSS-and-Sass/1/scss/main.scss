/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

// COLORS 
$color-primary:#55c57a;
$color-primary-light:#7ed56f;
$color-primary-dark:#28b485;
$color-grey-dark:#777;
$color-white:#fff;

/* universal selector*/
*,
*::after,
*::before
{
    margin: 0;
    padding: 0;
      /*
        1. for box modelling margin and padding will not add to calculate total width and total height of the comp
        2. By default box sizing will not inherit so we force full inheriting to all elements
      */
    box-sizing: inherit;
   
}

html{
    /*defined 10px to calculate rem value easily and converting all pixel to rem for RWD and 1rem = 10px  and just update the this style in different media queries to handle RWD*/
    /* if you fix the global font-size in pixel then we over riding the browser font size and it is not good practice, instead use % 
        default browser font size is 16px means 100% 
        but we need 10px as the standard unit so % conversion ratio is 10/16 = 0.625%
    */
    font-size: 62.5%;
}

/*we are using body tag to define the font related stuffs because body is parent to all elements and it inherits to all its children*/
body{
    font-family: 'Lato',sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color:$color-grey-dark;
    padding: 3rem;

   
    box-sizing: border-box;
}

.header{
    /*vh, view port height, 95% of the view port height*/
    height: 95vh;
    /* for gradient will use background-image property, but here we used for bg image so we we are using liner-gre to stay top on the image */
    background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light,0.8),
            rgba($color-primary-dark,0.8)), 
            url(../img/hero.jpg);
    background-size: cover;/*covers the entire box of the component*/
    background-position: top;/*keep background image will stay back at the top/bottom/center it will shrink as screen resizes from top */
    position: relative;
    clip-path: polygon(0 0,100% 0,100% 70vh,0 100%);
    /*clip-path: polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%);*/
}

.header__logo-box{
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo{
    height: 3.5rem;
    /*width automatically browser will calculate */
}

/*keep text box in the middle of the page*/
.header__text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%,-50%);
    text-align: center;/*all text components like, span,anchor tag and buttons will align center of this box*/
}
.heading-primary{
    color: $color-white;
    text-transform: uppercase;
    backface-visibility:hidden;
    margin-bottom: 6rem;
}
.heading-primary--main{
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    
    
    
    /*
    animation-iteration-count: 2;
    animation-delay: 1s;
    */

}
.heading-primary--sub{
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* animation-name: moveInRight;
    animation-duration: 2s;
    animation-timing-function: ease-out; */
    animation: moveInRight 2s ease-out;
}

/*animation */

@keyframes moveInLeft{
    0%{
        opacity: 0;
        /*from its original place to go back 100px from x direction */
        transform: translateX(-10rem);
    }
    80%{
        color: rgba(0, 255, 234, 0.993);
        transform: translateX(1rem);
    }
    100%{
        opacity: 1;
        transform: translateX(0px);
    }
}

@keyframes moveInRight{
    0%{
        opacity: 0;
        /*from its original place to go front 100px from x direction */
        transform: translateX(10rem);
    }

    80%{
        transform:translateX(-1rem)
    }
    100%{
        opacity:1 ;
        transform: translateX(0px);
    }
}

@keyframes moveInBottom{
    0%{
        opacity: 0;
        transform: translateY(3rem);
    }
    100%{
        opacity: 1;
        transform: translateY(0px);
    }
}

.btn:link,
.btn:visited{
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    display:inline-block;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn:hover{
    transform: translateY(-.3rem);
    box-shadow: 0px 1rem 2rem rgba(0,0,0,.2);
}
.btn:active{
    transform: translateY(-.1rem);
    box-shadow: 0px .5rem 1rem rgba(0,0,0,.2);
}
.btn--white{
    background-color:$color-white;
    color:$color-grey-dark;
}

/* pseudo elements is child element of its selector */
.btn::after{
    content: "";
    display:inline-block;
    width: 100%;
    height: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
    
}

.btn--white::after{
    background-color:$color-white;
}
/*on button hover ,style the child button using pseudo element i.r after*/
.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated{
    animation: moveInBottom .5s ease-out  .75s;
    /*animation 0% style will apply */
    animation-fill-mode: backwards;
}